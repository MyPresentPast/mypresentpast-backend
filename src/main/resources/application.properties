# ===================================
# MyPresentPast Backend Configuration
# TODAS las configuraciones vienen del archivo .env
# ===================================

# Server configuration
server.port=${SERVER_PORT:8081}
spring.jackson.property-naming-strategy=SNAKE_CASE

# Json Web Tokens(JWT)
jwt.secret.key=${JWT_SECRET_KEY}
jwt.expiration.ms=86400000

# Database Configuration - PostgreSQL (usando variables del .env)
spring.datasource.url=jdbc:postgresql://${DB_HOST:localhost}:${DB_PORT:5432}/${DB_NAME:mypresentpast_db}
spring.datasource.username=${DB_USERNAME:postgres}
spring.datasource.password=${DB_PASSWORD:password}
spring.datasource.driver-class-name=org.postgresql.Driver

# JPA/Hibernate configuration (usando variables del .env)
spring.jpa.hibernate.ddl-auto=${DDL_AUTO:create-drop}
spring.jpa.show-sql=${SHOW_SQL:true}
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect

# Data initialization
spring.jpa.defer-datasource-initialization=true
spring.sql.init.mode=always

# Disable security for now (easier development)
spring.security.user.name=${ADMIN_USERNAME:admin}
spring.security.user.password=${ADMIN_PASSWORD:admin123}

# CORS configuration (using environment variables) - DESHABILITADO: se maneja en CorsConfig.java
# spring.web.cors.allowed-origins=${FRONTEND_URL_REACT:http://localhost:3000},${FRONTEND_URL_ANGULAR:http://localhost:4200}
# spring.web.cors.allowed-methods=GET,POST,PUT,DELETE,OPTIONS
# spring.web.cors.allowed-headers=*
# spring.web.cors.allow-credentials=true

# Logging configuration
logging.level.com.mypresentpast.backend=INFO
logging.level.org.springframework.boot=INFO

# H2 specific settings (para compatibilidad)
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true
spring.jpa.properties.hibernate.temp.use_jdbc_metadata_defaults=false

# ===================================
# AI Configuration (usando variables del .env)
# ===================================

# Proveedor preferido: auto, openai, demo
ai.preferred-provider=${AI_PREFERRED_PROVIDER:openai}

# OpenAI Configuration (usando variables del .env)
ai.openai.api-key=${AI_OPENAI_API_KEY:}
ai.openai.api-url=https://api.openai.com/v1/chat/completions
ai.openai.model=gpt-3.5-turbo
ai.openai.max-tokens=1000
ai.openai.temperature=0.3

# Groq Configuration (usando variables del .env)
ai.groq.api-key=${AI_GROQ_API_KEY:}
ai.groq.api-url=https://api.groq.com/openai/v1/chat/completions
ai.groq.model=llama-3.3-70b-versatile
ai.groq.max-tokens=1000
ai.groq.temperature=0.3

# ===================================
# CLOUDINARY CONFIGURATION (usando variables del .env)
# ===================================
cloudinary.cloud-name=${CLOUDINARY_CLOUD_NAME}
cloudinary.api-key=${CLOUDINARY_API_KEY}
cloudinary.api-secret=${CLOUDINARY_API_SECRET}
