{
  "info": {
    "name": "MyPresentPast API - Colecci√≥n Completa y Corregida",
    "description": "API completa de MyPresentPast con autenticaci√≥n JWT autom√°tica\\n\\nüöÄ FLUJO AUTOM√ÅTICO:\\n1. Ejecuta 'POST /auth/register' - Crea usuario testuser@mypresentpast.com\\n2. Ejecuta 'POST /auth/login' - Se loguea autom√°ticamente con el mismo usuario\\n3. ¬°Ya tienes JWT y user_id guardados autom√°ticamente!\\n4. Todos los otros endpoints funcionan autom√°ticamente\\n\\n‚ö° URLS CORRECTAS: Sin /api (todas limpias)\\nüîê AUTENTICACI√ìN: Autom√°tica con JWT\\nüìù CAMPOS: En snake_case seg√∫n configuraci√≥n",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "version": "3.1.0"
  },
  "auth": {
    "type": "bearer",
    "bearer": [
      {
        "key": "token",
        "value": "{{jwt_token}}",
        "type": "string"
      }
    ]
  },
  "variable": [
    {
      "key": "base_url",
      "value": "http://localhost:8081",
      "type": "string"
    },
    {
      "key": "jwt_token",
      "value": "",
      "type": "string"
    },
    {
      "key": "user_id",
      "value": "1",
      "type": "string"
    },
    {
      "key": "post_id",
      "value": "1",
      "type": "string"
    }
  ],
  "item": [
    {
      "name": "üîê 1. AUTENTICACI√ìN",
      "description": "Endpoints de autenticaci√≥n - EJECUTAR PRIMERO para obtener JWT",
      "item": [
        {
          "name": "üîë POST /auth/login - Iniciar sesi√≥n",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "// Script autom√°tico para guardar JWT y extraer user_id del token",
                  "if (pm.response.code === 200) {",
                  "    const responseJson = pm.response.json();",
                  "    if (responseJson.token) {",
                  "        pm.collectionVariables.set('jwt_token', responseJson.token);",
                  "        console.log('‚úÖ Token JWT guardado autom√°ticamente');",
                  "        ",
                  "        // Decodificar JWT para extraer user_id",
                  "        try {",
                  "            const tokenParts = responseJson.token.split('.');",
                  "            const payload = JSON.parse(atob(tokenParts[1]));",
                  "            if (payload.uid) {",
                  "                pm.collectionVariables.set('user_id', payload.uid.toString());",
                  "                console.log('‚úÖ User ID extra√≠do del token:', payload.uid);",
                  "            }",
                  "        } catch (error) {",
                  "            console.log('‚ö†Ô∏è No se pudo extraer user_id del token');",
                  "        }",
                  "    }",
                  "} else {",
                  "    console.log('‚ùå Error en login - revisa credenciales');",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"testuser@mypresentpast.com\",\n  \"password\": \"TestPassword123\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/auth/login",
              "host": ["{{base_url}}"],
              "path": ["auth", "login"]
            }
          }
        },
        {
          "name": "üë§ POST /auth/register - Registrar usuario",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "// Script autom√°tico para guardar JWT del registro",
                  "if (pm.response.code === 200) {",
                  "    const responseJson = pm.response.json();",
                  "    if (responseJson.token) {",
                  "        pm.collectionVariables.set('jwt_token', responseJson.token);",
                  "        console.log('‚úÖ Token JWT del registro guardado autom√°ticamente');",
                  "        console.log('‚úÖ Usuario registrado exitosamente');",
                  "    }",
                  "} else {",
                  "    console.log('‚ùå Error en registro - revisa los datos');",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"testuser@mypresentpast.com\",\n  \"password\": \"TestPassword123\",\n  \"confirm_password\": \"TestPassword123\",\n  \"profile_username\": \"testuser_demo\",\n  \"name\": \"Test\",\n  \"last_name\": \"User\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/auth/register",
              "host": ["{{base_url}}"],
              "path": ["auth", "register"]
            }
          }
        }
      ]
    },
    {
      "name": "üë§ 2. PERFILES DE USUARIO",
      "description": "Gesti√≥n de perfiles de usuario",
      "item": [
        {
          "name": "üëÅÔ∏è GET /profiles/{id} - Ver perfil p√∫blico",
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/profiles/{{user_id}}",
              "host": ["{{base_url}}"],
              "path": ["profiles", "{{user_id}}"]
            }
          }
        },
        {
          "name": "üë§ GET /profiles/{id} - Ver perfil propio (autenticado)",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/profiles/{{user_id}}",
              "host": ["{{base_url}}"],
              "path": ["profiles", "{{user_id}}"]
            }
          }
        },
        {
          "name": "üèõÔ∏è GET /profiles/2 - Ver perfil instituci√≥n",
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/profiles/2",
              "host": ["{{base_url}}"],
              "path": ["profiles", "2"]
            }
          }
        },
        {
          "name": "üö´ GET /profiles/999 - Usuario no encontrado",
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/profiles/999",
              "host": ["{{base_url}}"],
              "path": ["profiles", "999"]
            }
          }
        }
      ]
    },
    {
      "name": "üìù 3. PUBLICACIONES",
      "description": "CRUD completo de publicaciones",
      "item": [
        {
          "name": "üìç GET /posts/map - Mapa con filtros",
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/posts/map?latMin=-35.0&latMax=-30.0&lonMin=-65.0&lonMax=-55.0",
              "host": ["{{base_url}}"],
              "path": ["posts", "map"],
              "query": [
                {
                  "key": "latMin",
                  "value": "-35.0",
                  "description": "Latitud m√≠nima"
                },
                {
                  "key": "latMax",
                  "value": "-30.0",
                  "description": "Latitud m√°xima"
                },
                {
                  "key": "lonMin",
                  "value": "-65.0",
                  "description": "Longitud m√≠nima"
                },
                {
                  "key": "lonMax",
                  "value": "-55.0",
                  "description": "Longitud m√°xima"
                },
                {
                  "key": "category",
                  "value": "STORY",
                  "disabled": true,
                  "description": "STORY, INFORMATION, MYTH"
                },
                {
                  "key": "date",
                  "value": "2024-01-15",
                  "disabled": true,
                  "description": "Fecha espec√≠fica YYYY-MM-DD"
                },
                {
                  "key": "isVerified",
                  "value": "true",
                  "disabled": true,
                  "description": "Solo verificadas"
                },
                {
                  "key": "isByIA",
                  "value": "false",
                  "disabled": true,
                  "description": "Solo hechas por IA"
                }
              ]
            }
          }
        },
        {
          "name": "üé≤ GET /posts/random - Publicaci√≥n aleatoria",
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/posts/random",
              "host": ["{{base_url}}"],
              "path": ["posts", "random"]
            }
          }
        },
        {
          "name": "üëÅÔ∏è GET /posts/{id} - Ver publicaci√≥n",
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/posts/{{post_id}}",
              "host": ["{{base_url}}"],
              "path": ["posts", "{{post_id}}"]
            }
          }
        },
        {
          "name": "üë§ GET /posts/user/{id} - Publicaciones de usuario",
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/posts/user/{{user_id}}",
              "host": ["{{base_url}}"],
              "path": ["posts", "user", "{{user_id}}"]
            }
          }
        },
        {
          "name": "‚ûï POST /posts - Crear publicaci√≥n",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "// Guardar ID del post creado",
                  "if (pm.response.code === 200 || pm.response.code === 201) {",
                  "    const responseJson = pm.response.json();",
                  "    if (responseJson.postId) {",
                  "        pm.collectionVariables.set('post_id', responseJson.postId.toString());",
                  "        console.log('‚úÖ Post ID guardado:', responseJson.postId);",
                  "    }",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "formdata",
              "formdata": [
                {
                  "key": "data",
                  "value": "{\n  \"title\": \"Historia desde Villa Mar√≠a\",\n  \"content\": \"Una interesante historia que ocurri√≥ en mi ciudad natal...\",\n  \"date\": \"2024-01-15\",\n  \"latitude\": -32.4075,\n  \"longitude\": -63.2406,\n  \"address\": \"Villa Mar√≠a, C√≥rdoba, Argentina\",\n  \"category\": \"STORY\",\n  \"isByIA\": false\n}",
                  "type": "text"
                },
                {
                  "key": "images",
                  "type": "file",
                  "src": [],
                  "disabled": true,
                  "description": "M√°ximo 5 im√°genes"
                }
              ]
            },
            "url": {
              "raw": "{{base_url}}/posts",
              "host": ["{{base_url}}"],
              "path": ["posts"]
            }
          }
        },
        {
          "name": "‚úèÔ∏è PUT /posts/{id} - Actualizar publicaci√≥n",
          "request": {
            "method": "PUT",
            "header": [],
            "body": {
              "mode": "formdata",
              "formdata": [
                {
                  "key": "data",
                  "value": "{\n  \"title\": \"Historia actualizada desde Villa Mar√≠a\",\n  \"content\": \"Contenido actualizado de la historia...\",\n  \"date\": \"2024-01-20\",\n  \"latitude\": -32.4075,\n  \"longitude\": -63.2406,\n  \"address\": \"Villa Mar√≠a, C√≥rdoba, Argentina\",\n  \"category\": \"INFORMATION\",\n  \"isByIA\": false,\n  \"keepImageIds\": [1, 2]\n}",
                  "type": "text"
                },
                {
                  "key": "newImages",
                  "type": "file",
                  "src": [],
                  "disabled": true,
                  "description": "Nuevas im√°genes"
                }
              ]
            },
            "url": {
              "raw": "{{base_url}}/posts/{{post_id}}",
              "host": ["{{base_url}}"],
              "path": ["posts", "{{post_id}}"]
            }
          }
        },
        {
          "name": "üóëÔ∏è DELETE /posts/{id} - Eliminar publicaci√≥n",
          "request": {
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{base_url}}/posts/{{post_id}}",
              "host": ["{{base_url}}"],
              "path": ["posts", "{{post_id}}"]
            }
          }
        }
      ]
    },
    {
      "name": "üë• 4. SISTEMA DE SEGUIMIENTO",
      "description": "Seguir usuarios, estad√≠sticas y listas",
      "item": [
        {
          "name": "‚ûï POST /follow/{userId} - Seguir usuario",
          "request": {
            "method": "POST",
            "header": [],
            "url": {
              "raw": "{{base_url}}/follow/2",
              "host": ["{{base_url}}"],
              "path": ["follow", "2"]
            }
          }
        },
        {
          "name": "‚ûñ DELETE /follow/{userId} - Dejar de seguir",
          "request": {
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{base_url}}/follow/2",
              "host": ["{{base_url}}"],
              "path": ["follow", "2"]
            }
          }
        },
        {
          "name": "‚ùì GET /follow/status/{userId} - ¬øLo sigo?",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/follow/status/2",
              "host": ["{{base_url}}"],
              "path": ["follow", "status", "2"]
            }
          }
        },
        {
          "name": "üìä GET /follow/stats/{userId} - Estad√≠sticas usuario",
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/follow/stats/2",
              "host": ["{{base_url}}"],
              "path": ["follow", "stats", "2"]
            }
          }
        },
        {
          "name": "üìù GET /follow/my-following - Mis seguidos",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/follow/my-following",
              "host": ["{{base_url}}"],
              "path": ["follow", "my-following"]
            }
          }
        },
        {
          "name": "üë• GET /follow/my-followers - Mis seguidores",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/follow/my-followers",
              "host": ["{{base_url}}"],
              "path": ["follow", "my-followers"]
            }
          }
        }
      ]
    },
    {
      "name": "üè∑Ô∏è 5. CATEGOR√çAS",
      "description": "Gesti√≥n de categor√≠as de publicaciones",
      "item": [
        {
          "name": "üìã GET /categories - Listar categor√≠as",
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/categories",
              "host": ["{{base_url}}"],
              "path": ["categories"]
            }
          }
        }
      ]
    },
    {
      "name": "ü§ñ 6. INTELIGENCIA ARTIFICIAL",
      "description": "Servicios de IA para correcci√≥n de contenido",
      "item": [
        {
          "name": "‚úçÔ∏è POST /ai/correct-content - Corregir texto",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"content\": \"Este es un texto con algunos errores de ortografia y gramatica que la IA puede corregir para mejorarlo.\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/ai/correct-content",
              "host": ["{{base_url}}"],
              "path": ["ai", "correct-content"]
            }
          }
        }
      ]
    },
    {
      "name": "üîß 7. UTILIDADES Y DEBUG",
      "description": "Endpoints de prueba y utilidades",
      "item": [
        {
          "name": "üèì GET /ping - Health check",
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/ping",
              "host": ["{{base_url}}"],
              "path": ["ping"]
            }
          }
        }
      ]
    }
  ]
}